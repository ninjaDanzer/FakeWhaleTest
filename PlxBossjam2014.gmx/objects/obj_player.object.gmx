<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_player_mockup</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Add variable to tell if hidden or not.
PlayerHidden = 0;
PlayerInteracting = false;
PlayerSlapping=false;
fade_value = 0;
//audio_play_sound(snd_whale_walking_first, 100, true);
audio_play_sound(snd_whale_walking_stone_second, 100, true);
image_speed=0;
y+=16;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check if the player crouches and modify movement speed + animation
var speed_multiplier=0;

if(input_check(BUTTON_CROUCH)) {
        PlayerSlapping=false;
        image_speed=0.1;
        speed_multiplier = 90 / room_speed;
        sprite_index=sp_player_croch_walk;
    
}else if(input_check_pressed(BUTTON_SLAP)&amp;&amp; !PlayerSlapping){
    PlayerSlapping=true;
    image_speed=1;
    audio_play_sound(snd_whale_slap,1,false);
    sprite_index=sp_player_slap;
}
else if(PlayerSlapping==false){
    speed_multiplier = 180 / room_speed;
    sprite_index=sp_player_mockup;
}

//flip sprite
if( (input_movement_x() &lt; 0) ) {
    image_xscale = -1;
}
else if(input_movement_x() &gt; 0)  {
    image_xscale = 1;
}

//fade player
if(PlayerHidden == 0){
    if(image_alpha &lt; 1.0) {
        fade_value += 1/room_speed;
    }
    image_alpha = fade_value;
}
else if (PlayerHidden == 1)
{
    if(image_alpha &gt; 0) {
        fade_value -= 1/room_speed;
    }
    image_alpha = fade_value;
}


//Switch stationary and moving + walking sound
if(PlayerSlapping==false){
    if(input_movement_x()==0 or PlayerHidden){
        image_speed=0;
        audio_pause_sound(snd_whale_walking_stone_second);
        //audio_pause_sound(snd_whale_walking_first);
    }
    else{ 
        //audio_resume_sound(snd_whale_walking_first);
        audio_resume_sound(snd_whale_walking_stone_second);
        image_speed=0.1;
        
        //move player
        x += input_movement_x() * speed_multiplier;
        
        if (!input_check(BUTTON_CROUCH)) {
            make_noise(x, y, 300);
        }
    }
}
>>>>>>> d1acd4a8d9b8f7ab56b39b38051d2136b80d117f
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>PlayerSlapping=false;
image_speed=0.25;
//image_index=sp_player_mockup;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_text(64,64,fade_value);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>60,60</point>
  </PhysicsShapePoints>
</object>
